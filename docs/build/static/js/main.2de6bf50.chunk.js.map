{"version":3,"sources":["components/Sheduler/Sheduler.tsx","mock/mockData.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["days","months","useStyles","makeStyles","root","width","container","maxHeight","stickyCell","position","background","left","zIndex","borderRight","borderLeft","stickyColumn","borderTop","sheduledIcon","color","backgroundColor","padding","marginLeft","borderRadius","fontSize","cellColumn","todayColumn","border","cell","nowrap","whiteSpace","Sheduler","props","classes","usl","React","useState","dt","Date","cols","rows","table","setTable","RenderUsl","isAborted","style","className","RenderDay","usls","sort","a","b","map","u","n","key","renderCell","col","row","ctype","value","filter","i","tday","label","name","useEffect","uslCategory","Array","from","Set","newRows","forEach","v","push","rowname","newCols","id","d","getTime","setDate","getDate","day","toISOString","substring","console","log","RenderTh","getMonth","getDay","TableContainer","Table","stickyHeader","aria-label","size","TableHead","TableRow","column","index","TableCell","align","minWidth","TableBody","hover","role","tabIndex","indx","uslAll","variants","getRandomA","array","Math","floor","random","length","getRandomUsl","dateStart","dateEnd","start","end","randomCategory","randomUsl","ttime","genUsl","num","res","theme","createStyles","height","paper","spacing","App","setNum","setUsl","Paper","elevation","type","min","max","onChange","e","parseInt","target","Button","variant","onClick","paddingTop","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2de6bf50.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport { oneUsl } from \"../../mock/mockData\";\nimport AccessTimeIcon from \"@material-ui/icons/AccessTime\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport BlockIcon from \"@material-ui/icons/Block\";\n\nconst days = [\n  \"Воскресенье\",\n  \"Понедельник\",\n  \"Вторник\",\n  \"Среда\",\n  \"Четверг\",\n  \"Пятница\",\n  \"Суббота\",\n];\nconst months = [\n  \"января\",\n  \"февраля\",\n  \"марта\",\n  \"апреля\",\n  \"мая\",\n  \"июня\",\n  \"июля\",\n  \"августа\",\n  \"сентября\",\n  \"октября\",\n  \"ноября\",\n  \"декабря\",\n];\n\ntype ShedulerPropsType = {\n  usl: oneUsl[];\n  dt?: Date;\n};\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\",\n  },\n  container: {\n    maxHeight: 540,\n  },\n  stickyCell: {\n    position: \"sticky\",\n    background: \"#fff\",\n    left: 0,\n    zIndex: 10,\n    borderRight: \"1px solid rgba(224, 224, 224, 1)\",\n    borderLeft: \"1px solid rgba(224, 224, 224, 1)\",\n  },\n  stickyColumn: {\n    position: \"sticky\",\n    background: \"rgba(224, 224, 224, 1)\",\n    left: 0,\n    zIndex: 11,\n    borderRight: \"1px solid rgba(224, 224, 224, 1)\",\n    borderLeft: \"1px solid rgba(224, 224, 224, 1)\",\n    borderTop: \"1px solid rgba(224, 224, 224, 1)\",\n  },\n  sheduledIcon: {\n    color: \"white\",\n    backgroundColor: \"#c4c4c4\",\n    padding: \"4px 8px\",\n    marginLeft: \"2px\",\n    borderRadius: \"4px\",\n    fontSize: 14,\n  },\n  cellColumn: {\n    borderRight: \"1px solid rgba(224, 224, 224, 1)\",\n    borderTop: \"1px solid rgba(224, 224, 224, 1)\",\n  },\n  todayColumn: {\n    border: \"1px solid rgba(224, 224, 224, 1)\",\n    borderTop: \"5px solid #1a75ff\",\n  },\n  cell: {\n    borderRight: \"1px solid rgba(224, 224, 224, 1)\",\n  },\n  nowrap: {\n    whiteSpace: \"nowrap\",\n  },\n});\n\ntype RowType = {\n  value: any;\n  ctype: \"usl\" | \"uslCategory\";\n  rowname: string;\n};\n\ntype ColumnType = {\n  id: string;\n  label: string;\n  ctype: \"label\" | \"data\";\n  minWidth?: number;\n  align?: \"right\";\n};\n\ntype tableDataType = {\n  cols: ColumnType[];\n  rows: RowType[];\n};\n\ntype RenderDayProps = {\n  usls: oneUsl[];\n  dt: Date;\n};\n\ntype RenderUslProps = {\n  usl: oneUsl;\n  dt: Date;\n};\n\nexport default function Sheduler(props: ShedulerPropsType) {\n  const classes = useStyles();\n  const { usl } = props;\n  const [dt] = React.useState(props.dt ? props.dt : new Date());\n  const [table, setTable] = React.useState<tableDataType>({\n    cols: [],\n    rows: [],\n  });\n\n  const RenderUsl = (props: RenderUslProps) => {\n    const { usl, dt } = props;\n    if (usl.isAborted) {\n      // отмененное\n      return (\n        <BlockIcon\n          style={{ backgroundColor: \"#ff704d\" }}\n          className={classes.sheduledIcon}\n        />\n      );\n    }\n    if (!usl.isAborted && usl.dt < dt) {\n      // сделано\n      return (\n        <CheckIcon\n          style={{ backgroundColor: \"rgb(54, 187, 106)\" }}\n          className={classes.sheduledIcon}\n        />\n      );\n    }\n    if (!usl.isAborted && usl.dt > dt) {\n      // планируется\n      return <AccessTimeIcon className={classes.sheduledIcon} />;\n    }\n    return <>1</>;\n  };\n\n  const RenderDay = (props: RenderDayProps) => {\n    const { usls, dt } = props;\n    return (\n      <div className={classes.nowrap}>\n        {usls\n          .sort((a, b) => {\n            return a.dt > b.dt ? 1 : -1;\n          })\n          .map((u, n) => {\n            const key = `rd-${u.dt}-${n}`;\n            return <RenderUsl usl={u} dt={dt} key={key} />;\n          })}\n      </div>\n    );\n  };\n\n  const renderCell = (col: ColumnType, row: RowType) => {\n    // первая колонка\n    if (col.ctype === \"label\") {\n      if (row.ctype === \"uslCategory\") {\n        return <strong>{row.value}</strong>;\n      }\n      return row.value;\n    }\n    // Категория услуг - пустое значение\n    if (col.ctype === \"data\" && row.ctype === \"uslCategory\") {\n      return \"\";\n    }\n    // Один день назначений\n    if (col.ctype === \"data\" && row.ctype === \"usl\") {\n      return (\n        <RenderDay\n          usls={usl\n            .filter((i) => i.tday === col.label)\n            .filter((i) => i.name === row.value)}\n          dt={dt}\n        />\n      );\n    }\n\n    return <>Значение</>;\n  };\n\n  React.useEffect(() => {\n    // собираем строки\n    const uslCategory = Array.from(new Set(usl.map((i) => i.ctype))).sort();\n    const newRows: RowType[] = [];\n    uslCategory.forEach((v) => {\n      newRows.push({ value: v, ctype: \"uslCategory\", rowname: \"names\" });\n      const names = Array.from(\n        new Set(usl.filter((i) => i.ctype === v).map((i) => i.name))\n      ).sort();\n      names.forEach((n) => {\n        newRows.push({ value: n, ctype: \"usl\", rowname: \"names\" });\n      });\n    });\n    // собираем колонки\n    const newCols: ColumnType[] = [];\n    newCols.push({ id: \"Название\", label: \"\", ctype: \"label\" });\n    for (let i = -3; i < 4; i++) {\n      const d = new Date(dt.getTime());\n      d.setDate(d.getDate() + i);\n      const day = d.toISOString().substring(0, 10);\n      newCols.push({ id: day, label: day, ctype: \"data\" });\n    }\n    setTable({ rows: newRows, cols: newCols });\n  }, [usl, dt]);\n\n  React.useEffect(() => {\n    console.log(\"Table: \", table);\n    console.log(\"Usl:\", usl);\n  }, [table]);\n\n  const RenderTh = (col: ColumnType) => {\n    if (col.ctype === \"data\") {\n      const d = new Date(col.label);\n      return (\n        <span>\n          {`${d.getDate()} ${months[d.getMonth()]}`}\n          <br />\n          {days[d.getDay()]}\n        </span>\n      );\n    }\n    return col.label;\n  };\n\n  return (\n    <TableContainer className={classes.container}>\n      <Table stickyHeader aria-label=\"sticky table\" size=\"small\">\n        <TableHead>\n          <TableRow>\n            {table.cols.map((column, index) => (\n              <TableCell\n                key={column.id}\n                align={column.align}\n                style={{ minWidth: column.minWidth }}\n                className={\n                  column.label === dt.toISOString().substring(0, 10)\n                    ? classes.todayColumn\n                    : index === 0\n                    ? classes.stickyColumn\n                    : classes.cellColumn\n                }\n              >\n                {RenderTh(column)}\n              </TableCell>\n            ))}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {table.rows.map((row) => {\n            return (\n              <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.value}>\n                {table.cols.map((column, indx) => {\n                  return (\n                    <TableCell\n                      key={column.id}\n                      align={column.align}\n                      className={indx === 0 ? classes.stickyCell : classes.cell}\n                    >\n                      {renderCell(column, row)}\n                    </TableCell>\n                  );\n                })}\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","export type ctype = \"Hазначения\" | \"Консультации\" | \"Исследования\" | \"Операции\";\n\nexport type ltype = { ctype: ctype; variants: string[] }[];\n\nexport type oneUsl = {\n  tday: string;\n  ttime: string;\n  dt: Date;\n  name: string;\n  ctype: ctype;\n  isAborted: boolean;\n};\n\nexport const uslAll: ltype = [\n  {\n    ctype: \"Hазначения\",\n    variants: [\n      \"Аккузид\",\n      //\"Алендроновая кислота\",\n      \"Аспирин-С\",\n      \"Диронет антигельминтик\",\n      //\"Чистотел Глистогон\",\n      //\"Бактериофаг протейный\",\n      //\"Банеоцин\",\n      //\"Берлитион 600\",\n      \"Бисопролол\",\n    ],\n  },\n  {\n    ctype: \"Консультации\",\n    variants: [\n      \"Хирург\",\n      \"Офтальмолог\",\n      //\"Невропатолог\",\n      \"Отоларинголог\",\n      //\"Терапевт\",\n    ],\n  },\n  {\n    ctype: \"Исследования\",\n    variants: [\"Общий анализ крови\", \"Анализ мочи\", \"Биопсия спинного мозга\"],\n  },\n];\n\nconst getRandomA = (array: Array<any>) => {\n  return array[Math.floor(Math.random() * array.length)];\n};\n\nconst randomDate = (start: Date, end: Date) => {\n  return new Date(\n    start.getTime() + Math.random() * (end.getTime() - start.getTime())\n  );\n};\n\nexport const getRandomUsl = (): oneUsl => {\n  const dateStart = new Date();\n  dateStart.setDate(dateStart.getDate() - 3);\n  const dateEnd = new Date();\n  dateEnd.setDate(dateEnd.getDate() + 3);\n\n  const dt = randomDate(dateStart, dateEnd)\n\n  const randomCategory = getRandomA(uslAll);\n  const randomUsl = getRandomA(randomCategory.variants);\n  return {\n    dt,\n    tday: dt.toISOString().substring(0,10),\n    ttime: dt.toISOString().substring(11,16),\n    name: randomUsl,\n    ctype: randomCategory.ctype,\n    isAborted: Math.random() > 0.9\n  };\n};\n\nexport const genUsl = (num?: number): oneUsl[] => {\n    const n = num? num: 100;\n    let res: oneUsl[] = [];\n    for (let i = 0; i < n; i++) { \n        res.push(getRandomUsl())\n    }\n    return res;\n}\n\n\n","import React from \"react\";\nimport { Theme, createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Sheduler from \"./components/Sheduler/Sheduler\";\nimport { genUsl, oneUsl } from \"./mock/mockData\";\nimport Button from \"@material-ui/core/Button\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      padding: 0,\n      width: \"100%\",\n      height: \"100%\",\n    },\n    paper: {\n      padding: theme.spacing(2),\n    },\n  })\n);\n\nfunction App() {\n  const classes = useStyles();\n  const [num, setNum] = React.useState(100);\n  const [usl, setUsl] = React.useState<oneUsl[]>(genUsl(num));\n\n  React.useEffect(() => {\n    console.log(\"Usl: \", usl);\n  }, [usl]);\n\n  return (\n    <div className={classes.root}>\n      <Paper elevation={3} className={classes.paper}>\n        <h3>Таблица назначений</h3>\n        <input\n          type=\"range\"\n          id=\"vol\"\n          name=\"vol\"\n          min=\"20\"\n          max=\"200\"\n          value={num}\n          onChange={(e) => setNum(parseInt(e.target.value))}\n        ></input>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => setUsl(genUsl(num))}\n        >\n          Сгенерировать ({num})\n        </Button>\n        <div style={{ paddingTop: 16 }}>\n          <Sheduler usl={usl} />\n        </div>\n      </Paper>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}